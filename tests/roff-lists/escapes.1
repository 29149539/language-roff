.TH ESCAPE SEQUENCES FOR CHARACTERS, INDICATORS, AND FUNCTIONS
.nf

\\               \" Prevents or delays interpretation of \
\e               \" Printable version of current escape character
\´               \" Acute accent: equivalent to \(aa
\`               \" Grave accent: equivalent to \(ga
\-               \" Minus sign in the current font
\.               \" Period (dot)
\                \" Unpaddable space-size space character
\0               \" Digit-width space
\|               \" 1/6 em narrow space character (zero-width in nroff)
\^               \" 1/12 em half-narrow space character (zero-width in nroff)
\&               \" Non-printing, zero-width character
\!               \" Transparent line indicator
\"               \" Beginning of comment; continues to end of line
\%               \" Default optional hyphenation character
\(aa             \" Character named "aa"
\*x   \*(xx      \" Interpolate string "x" or "xx"
\$1              \" Interpolate argument "1" (range: 0-9)
\a               \" Non-interpreted leader character
\b'abc…'         \" Bracket building function
\c               \" Connect to next input text
\C'xyz'          \" Character named "xyz"
\d               \" Downward ½ em vertical motion (½ line in nroff)
\D'c…'           \" Draw graphics function "c" with parameters "…"
\fx, \f(xx, \fN  \" Change to font named "x" or "xx", or position N
\gx, \g(xx       \" Format of number register "x" or "xx"
\h'N'            \" Local horizontal motion; move right N (negative left)
\H'N'            \" Height of current font is N
\kX              \" Mark horizontal input place in register "X"
\l'Nc'           \" Horizontal line-drawing function (optionally with c)
\L'Nc'           \" Vertical line-drawing function (optionally with c)
\nX, \n(XX       \" Contents of number register "X" or "XX"
\N'N'            \" Character number N in current font
\o'abc…'         \" Overstrike characters "a", "b", "c", …
\p               \" Break and spread output line
\r               \" Reverse 1 em vertical motion (reverse line in nroff)
\s1, \s+1        \" Point-size change function; also \s(NN, \s±(NN
\S'N'            \" Slant output N degrees
\t               \" Non-interpreted horizontal tab
\u               \" Reverse (up) ½ em vertical motion (½ line in nroff)
\v'N'            \" Local vertical motion; move down N (negative up)
\w'STR'          \" Width of string STR
\x'N'            \" Extra line-space function (negative before, positive after)
\X'STR'          \" Output string STR as device control function
\zC              \" Print C with zero width (without spacing)
\{               \" Begin conditional input
\}               \" End conditional input
\newline         \" Concealed (ignored) newline
\Z               \" Z, any character not listed above


.SH GROFF EXTENSIONS
\[xx]            \" Print the glyph named "xx"
\[x y z…]        \" Print composite glyph
\f[xx]           \" Change font to "xx"
\f[]             \" Revert font to default
\*[xx args…]     \" Interpolate string "xx", taking `args…` as arguments
\n[xx]           \" Interpolate number register "xx"
\A'xx'           \" Expand to 1 or 0 based on whether "xx" is an acceptable identifier
\B'xx'           \" Expand to 1 or 0 based on whether "xx" is a valid numeric expression
\F[xx]           \" Set font family to "xx"
\mx, \m(xx, \m[x]\" Set drawing colour
\Mx, \M(xx, \M[x]\" Set background colour of \D'…' drawings
\m[]             \" Restore previous drawing colour
\M[]             \" Restore previous background colour
\O2              \" Suppress troff output: \O2, \O3, \O4, \O5 used internally by grohtml
\O5[filename]    \" Write filename to STDERR; grohtml-specific
\R'name +-n'     \" Define/set number alias: equal to ".nr name +-n"
\s[±n], \s+[n]   \" Adjust point-size; also \s'+-n', \s+-'n'
\Vx, \V(xx, \V[x]\" Interpolate contents of environment variable
\Yx, \Y(xx, \Y[x]\" Equivalent to \X'\*[xxx]'
\Z'xx'           \" Print "xx" and then restore physical position
\$*              \" Concatenated arguments, joined with spaces
\$@              \" Concatenated arguments, quoted and joined with spaces
\$^              \" Representation of parameters as if passed to .ds request
\$(nn, \$[nnn]   \" Expands to become the n-th argument passed to a macro or string
\?code\?         \" Embed "code" in a diversion; mustn't contain newlines
\/               \" Adjust advance width of preceding glyph
\,               \" Adjust advance width of following glyph
\)               \" Same as \&, but remains transparent with regards to end-of-sentence recognition
\~               \" Stretchable, unbreakable space
\:               \" Zero-width break point
\#               \" Comment; suppresses newline
