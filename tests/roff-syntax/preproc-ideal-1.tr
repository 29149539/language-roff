.IS

rect {
	var ne, nw, se, sw,
		wd, nt;
	
	nw = sw + (0,1) * ht;
	ne = nw + wd;
	se = sw + wd;
	conn ne to nw to sw to se to ne;
}


put rect {
	ht = 2;
	wd = 1;
	sw = 0;
};

put rect {
	ht = 2;
	wd = 0.5 * ht;
	nw = (0,2);
};


put rect {
	(nw + sw)/2 = (0,1);
	nw = (0,2);
	wd = 1;
}

put rect {
	sw = 0;
	wd = (1,1)/abs((1,1));
}

wd / abs(wd) = ht/abs(ht);



/* ======== */

arrow {
	var hd, tl, head, wing;
	head = 0.1;
	wing = head*(tl-hd)/abs(tl-hd);
	conn hd to tl;
	conn hd + cis(25)*wing to hd to hd + cis(-25)*wing;
}


put circle {
	center = 0;
	radius = 1;
}

put circle {
	center = 0;
	z1 = 1; /* Could've also given z2 or z3 */
}

put circle {
	z1 = (1,0);
	z2 = cis(155);
	z3 = cis(235);
}

put arc {
	center = 0;
	start = 1;
	endang = 235;
}

/* Giving three points on the arc */
put arc {
	start = cis(255);
	midway = -1;
	end = 0;
}


left "some text" at x;
"some centred text" at y;
right "some other text" at z;

/* ยง3.3.2 */
spline x to y to z to w;


 
/* ยง4.1 */
main {
	
	put first: rect {
		sw = 0;
		ht = wd = 1;
	};
	put next: rect {
		nw = first.se;
		ht = wd = first.ht;
	};
	put last: rect {
		sw = first.ne;
		se = next.ne;
		ht = wd;
	}
}

triangle {
	var z1, z2, z3;
	conn z1 to z2 to z3 to z1;
}

main {
	put T: triangle {
		z1 = 0;
		z2 = 1;
		z3 = (2,2);
	};
	put circle {
		z1 = T.z1;
		z2 = T.z2;
		z3 = T.z3;
	}
}

/* 4.2 */
listnode {
	put info: rect {
		var hook;
		hook = (nw + sw) / 2;
		ht = lht;
		wd = lwd/2;
	}
	
	put next: rect{
		var c;
		c = (nw + se)/2;
		sw = info.se;
		ht = lht;
		wd = lwd/2;
	}
}


main {
	var lht, lwd;
	lht = 1;
	lwd = 2 * lht;
	put first: listnode {
		info.sw = 0;
	}
	
	put last: listnode {
		info.sw = 2[first.info.sw, first.next.se];
		conn next.sw to nex.ne;
	}
	
	put new: listnode {
		info.nw = 2[first.next.ne, first.next.se];
	}
	
	put arrow {
		hd = last.info.hook;
		tl = first.next.c;
	}
	
	put arrow {
		hd = new.info.hook;
		tl = hd - 1;
		right "new" at tl;
	}
	
	put arrow {
		hd = first.info.hook;
		tl = hd - 1;
		right "list" at tl;
	}
}


/* 5.1 Pens */
wavy {
	var start, end, perp, pt1, pt2, ht;
	perp = (0,1) * (start - end) / abs(start - end);
	pt1 = 0.25[start, end] + perp + ht;
	pt2 = 0.75[start, end] - perp * ht;
	conn start to p2 to p2 to end;
}

main {
	var ne, nw, se, sw;
	var n1, s1, n2, s2;
	ne = nw + 2;
	sw = sw + 2;
	ne = se + (0,1);
	n2 - 0.4 = n1 = 0.6[nw, ne];
	s2 - 0.4 = s1 = 0.4[sw, se];
	conn n1 to nw to sw to s1;
	conn n1 to s1
		using int(5 * abs(n1 - s1)) wavy {
			
		} <start, end>;
}


put rect {
	opaque exterior;
	bdlist = sw, se, ne, nw;
	sw = (-0.4, -0.4);
	wd = ht = 1;
}


/* 7.1 */
...libfile name

main {
	construct A: rect {
		sw = 0;
		wd = ht = 1;
	}
	
	construct B: rect {
		n = A.s - (0,1);
		wd = ht = 1;
	}
	'top' at A.c;
	'bottom' at B.c;
	
	put arrow {
		hd = B.n;
		t1 = A.s;
	}
}
.IE
