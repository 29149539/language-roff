name: "Sandbox"
scopeName: "source.sandbox"
fileTypes: []
patterns: [
	{include: "#comments"}
	{include: "#alternating-fonts"}
]


repository:
	
	
	"alternating-fonts":
		patterns: [{
			
			# .BI: Bold + Italic
			name: "meta.bold-italic.roff"
			begin: "^([.'])[ \t]*(BI)\\b"
			end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures:
				0: {name: "meta.function.man.macro.roff"}
				1: {name: "punctuation.definition.function.macro.roff"}
				2: {name: "entity.name.function.roff"}
			patterns: [
				{include: "#odd-bold"}
				{include: "#even-italic-after-bold"}
				{include: "#even-italic"}
				{include: "#bridge-escapes"}
			]
		},{
			
			# .BR: Bold + Roman
			name: "meta.bold-roman.roff"
			begin: "^([.'])[ \t]*(BR)\\b"
			end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures:
				0: {name: "meta.function.man.macro.roff"}
				1: {name: "punctuation.definition.function.macro.roff"}
				2: {name: "entity.name.function.roff"}
			patterns: [
				{include: "#odd-bold"}
				{include: "#even-roman-after-bold"}
				{include: "#even-roman"}
				{include: "#bridge-escapes"}
			]
		},{
			
			# .IB: Italic + Bold
			name: "meta.italic-bold.roff"
			begin: "^([.'])[ \t]*(IB)\\b"
			end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures:
				0: {name: "meta.function.man.macro.roff"}
				1: {name: "punctuation.definition.function.macro.roff"}
				2: {name: "entity.name.function.roff"}
			patterns: [
				{include: "#odd-italic"}
				{include: "#even-bold-after-italic"}
				{include: "#even-bold"}
				{include: "#bridge-escapes"}
			]
		},{
			
			# .IR: Italic + Roman
			name: "meta.italic-roman.roff"
			begin: "^([.'])[ \t]*(IR)\\b"
			end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures:
				0: {name: "meta.function.man.macro.roff"}
				1: {name: "punctuation.definition.function.macro.roff"}
				2: {name: "entity.name.function.roff"}
			patterns: [
				{include: "#odd-italic"}
				{include: "#even-roman-after-italic"}
				{include: "#even-roman"}
				{include: "#bridge-escapes"}
			]
		},{
			
			# .RB: Roman + Bold
			name: "meta.roman-bold.roff"
			begin: "^([.'])[ \t]*(RB)\\b"
			end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures:
				0: {name: "meta.function.man.macro.roff"}
				1: {name: "punctuation.definition.function.macro.roff"}
				2: {name: "entity.name.function.roff"}
			patterns: [
				{include: "#odd-roman"}
				{include: "#even-bold-after-roman"}
				{include: "#even-bold"}
				{include: "#bridge-escapes"}
			]
		},{
			
			# .RI: Roman + Italic
			name: "meta.roman-italic.roff"
			begin: "^([.'])[ \t]*(RI)\\b"
			end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures:
				0: {name: "meta.function.man.macro.roff"}
				1: {name: "punctuation.definition.function.macro.roff"}
				2: {name: "entity.name.function.roff"}
			patterns: [
				{include: "#odd-roman"}
				{include: "#even-italic-after-roman"}
				{include: "#even-italic"}
				{include: "#bridge-escapes"}
			]
		}]
	

	"bridge-escapes":
		patterns: [
			{name: "constant.character.escape.newline.roff", begin: "[ \t]+\\\\$\\n?", end: "^"}
			{name: "constant.character.escape.newline.roff", begin: "\\\\$\\n?", end: "^[ \t]*"}
		]


	"odd-bold":
		patterns: [{
			name: "markup.bold.roff"
			begin: '[ \t]+(")'
			end:   '(")[ \t]*|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures: 1: name: "punctuation.definition.string.begin.roff"
			endCaptures:   1: name: "punctuation.definition.string.end.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		},{
			name: "markup.bold.roff"
			begin: '[ \t]+(\\\\$\\n?)'
			end:   '(?<!^)[ \t]+|(?=\\\\")|(?<!\\\\)(?=\\n|$)'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes", {
				begin: "^[ \t]+"
				end: "(?=\\S)|(?<!\\\\)(?:$|\\n)"
			}]
		},{
			name: "markup.bold.roff"
			begin: '[ \t]+(?!")((?:[^\\s"\\\\]|\\\\(?!").)+)'
			end:   '[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes"]
		}]


	"odd-italic":
		patterns: [{
			name: "markup.italic.roff"
			begin: '[ \t]+(")'
			end:   '(")[ \t]*|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures: 1: name: "punctuation.definition.string.begin.roff"
			endCaptures:   1: name: "punctuation.definition.string.end.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		},{
			name: "markup.italic.roff"
			begin: '[ \t]+(\\\\$\\n?)'
			end:   '(?<!^)[ \t]+|(?=\\\\")|(?<!\\\\)(?=\\n|$)'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes", {
				begin: "^[ \t]+"
				end: "(?=\\S)|(?<!\\\\)(?:$|\\n)"
			}]
		},{
			name: "markup.italic.roff"
			begin: '[ \t]+(?!")((?:[^\\s"\\\\]|\\\\(?!").)+)'
			end:   '[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes"]
		}]


	"odd-roman":
		patterns: [{
			name: "markup.plain.roff"
			begin: '[ \t]+(")'
			end:   '(")[ \t]*|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures: 1: name: "punctuation.definition.string.begin.roff"
			endCaptures:   1: name: "punctuation.definition.string.end.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		},{
			name: "markup.plain.roff"
			begin: '[ \t]+(\\\\$\\n?)'
			end:   '(?<!^)[ \t]+|(?=\\\\")|(?<!\\\\)(?=\\n|$)'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes", {
				begin: "^[ \t]+"
				end: "(?=\\S)|(?<!\\\\)(?:$|\\n)"
			}]
		},{
			name: "markup.plain.roff"
			begin: '[ \t]+(?!")((?:[^\\s"\\\\]|\\\\(?!").)+)'
			end:   '[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes"]
		}]



	"even-bold":
		patterns: [
			name: "markup.bold.roff"
			begin: '(?<=^|\\s|")(?!"|\\\\")((?:[^\\s"\\\\]|\\\\(?!").)+)'
			end:   '(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes"]
		]

	"even-italic":
		patterns: [
			name: "markup.italic.roff"
			begin: '(?<=^|\\s|")(?!"|\\\\")((?:[^\\s"\\\\]|\\\\(?!").)+)'
			end:   '(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes"]
		]
	
	"even-roman":
		patterns: [
			name: "markup.plain.roff"
			begin: '(?<=^|\\s|")(?!"|\\\\")((?:[^\\s"\\\\]|\\\\(?!").)+)'
			end:   '(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
			beginCaptures: 1: patterns: [include: "#escapes"]
			patterns: [include: "#escapes"]
		]
	
	
	"even-bold-after-italic":
		patterns: [{
			name: "markup.bold.roff"
			begin: '"'
			end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures:
				0: name: "punctuation.definition.string.begin.roff"
			endCaptures:
				1: name: "punctuation.definition.string.end.roff"
				2: name: "markup.italic.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		}]
	
	"even-bold-after-roman":
		patterns: [{
			name: "markup.bold.roff"
			begin: '"'
			end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures:
				0: name: "punctuation.definition.string.begin.roff"
			endCaptures:
				1: name: "punctuation.definition.string.end.roff"
				2: name: "markup.plain.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		}]
	
	
	"even-italic-after-bold":
		patterns: [{
			name: "markup.italic.roff"
			begin: '"'
			end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures:
				0: name: "punctuation.definition.string.begin.roff"
			endCaptures:
				1: name: "punctuation.definition.string.end.roff"
				2: name: "markup.bold.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		}]
	
	"even-italic-after-roman":
		patterns: [{
			name: "markup.italic.roff"
			begin: '"'
			end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures:
				0: name: "punctuation.definition.string.begin.roff"
			endCaptures:
				1: name: "punctuation.definition.string.end.roff"
				2: name: "markup.plain.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		}]


	"even-roman-after-bold":
		patterns: [{
			name: "markup.plain.roff"
			begin: '"'
			end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures:
				0: name: "punctuation.definition.string.begin.roff"
			endCaptures:
				1: name: "punctuation.definition.string.end.roff"
				2: name: "markup.bold.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		}]

	"even-roman-after-italic":
		patterns: [{
			name: "markup.plain.roff"
			begin: '"'
			end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
			beginCaptures:
				0: name: "punctuation.definition.string.begin.roff"
			endCaptures:
				1: name: "punctuation.definition.string.end.roff"
				2: name: "markup.italic.roff"
			patterns: [{
				match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
				captures: 1: patterns: [include: "#string-escapes"]
			}, include: "#string-escapes"]
		}]







	# Everything under this line should be supplied by the existing grammar
	escapes:
		patterns: [{
			match: '(\\\\n\\()(\\w{2})'
			name: "constant.character.escape"
			captures:
				1: name: "entity.name"
				2: name: "variable.parameter"
		},{
			match: "\\\\."
			name: "constant.character.escape"
		},{
			name: "constant.character.escape.newline"
			begin: "\\\\$\\n?"
			end: "^"
		}]

	"string-escapes":
		patterns: [
			{match: '""', name: "constant.character.escape.quote.double.roff"}
			{include: "#escapes"}
		]

	comments:
		begin: '\\\\"'
		end: "$"
		name: "comment.line"
