name: "Sandbox"
scopeName: "source.sandbox"
fileTypes: []
patterns: [{include: "#comments"}

	name: "meta.odd-even.roff"
	begin: "^([.'])[ \t]*(BI)\\b"
	end:   '(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
	beginCaptures:
		0: {name: "meta.function.man.macro.roff"}
		1: {name: "punctuation.definition.function.macro.roff"}
		2: {name: "entity.name.function.roff"}
	patterns: [
		{include: "#redQuoted"}
		{include: "#red"}
		{include: "#greenQuoted"}
		{include: "#green"}
		{include: "#escape-red-to-green"}
		{include: "#escape-green-to-red"}
	]
]


repository:
	redQuoted:
		name: "test-1"
		begin: '[ \t]+(")'
		end:   '(")[ \t]*|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
		beginCaptures: 1: name: "punctuation.definition.string.begin.roff"
		endCaptures:   1: name: "punctuation.definition.string.end.roff"
		patterns: [{
			match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
			captures: 1: patterns: [include: "#string-escapes"]
		}, include: "#string-escapes"]
		
	greenQuoted:
		name: "test-2"
		begin: '"'
		end:   '(")([^"\\s]+[ \t]*)?|(?=\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)'
		beginCaptures:
			0: name: "punctuation.definition.string.begin.roff"
		endCaptures:
			1: name: "punctuation.definition.string.end.roff"
			2: name: "test-1"
		patterns: [{
			match: '((?:[^"\\\\]|""|\\\\(?!").)+)(?!$)'
			captures: 1: patterns: [include: "#string-escapes"]
		}, include: "#string-escapes"]
	
	
	
	red:
		name: "test-1"
		begin: '[ \t]+(?!")((?:[^\\s"\\\\]|\\\\(?!").)+)'
		end:   '[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
		beginCaptures: 1: patterns: [include: "#escapes"]
		patterns: [include: "#escapes"]


	green:
		name: "test-2"
		begin: '(?<=^|\\s|")(?!"|\\\\")((?:[^\\s"\\\\]|\\\\(?!").)+)'
		end:   '(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\")'
		beginCaptures:
			1: patterns: [include: "#escapes"]
		patterns: [include: "#escapes"]


	"escape-green-to-red":
		begin: "\\\\$\\n?"
		end: "^[ \t]*"
		name: "test-3"
	
	"escape-red-to-green":
		begin: "[ \t]+\\\\$\\n?"
		end: "^"
		name: "test-3"


	# Everything under this line should be supplied by the existing grammar
	escapes:
		patterns: [{
			match: '(\\\\n\\()(\\w{2})'
			name: "constant.character.escape"
			captures:
				1: name: "entity.name"
				2: name: "variable.parameter"
		},{
			match: "\\\\."
			name: "constant.character.escape"
		},{
			name: "constant.character.escape.newline"
			begin: "\\\\$\\n?"
			end: "^"
		}]

	"string-escapes":
		patterns: [
			{match: '""', name: "constant.character.escape.quote.double.roff"}
			{include: "#escapes"}
		]

	comments:
		begin: '\\\\"'
		end: "$"
		name: "comment.line"
