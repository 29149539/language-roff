name: "Roff"
scopeName: "text.roff"
firstLineMatch: "^\\.TH +(?:\\S+)"
fileTypes: [
	"1", "1b", "1c", "1has", "1in", "1m", "1s", "1x",
	"2",
	"3", "3avl", "3bsm", "3c", "3in", "3m", "3qt", "3x",
	"4",
	"5",
	"6",
	"7", "7d", "7fs", "7i", "7ipp", "7m", "7p",
	"8",
	"9", "9e", "9f", "9p", "9s",
	"chem",
	"eqn",
	"groff",
	"man",
	"mandoc",
	"mdoc",
	"me",
	"ms",
	"mom",
	"n",
	"rnh",
	"rno",
	"roff",
	"run",
	"t",
	"tr"
]

patterns: [{ include: "#main" }]


repository:
	
	# Common patterns
	main: {
		patterns: [
			{ include: "#comments"             }
			{ include: "#bold"                 }
			{ include: "#italic"               }
			{ include: "#bold-italic"          }
			{ include: "#underline"            }
			{ include: "#headings"             }
			{ include: "#macro-bold"           }
			{ include: "#macro-italic"         }
			{ include: "#macro-bold-italic"    }
			{ include: "#macro-bold-roman"     }
			{ include: "#macro-italic-bold"    }
			{ include: "#macro-italic-roman"   }
			{ include: "#macro-roman-bold"     }
			{ include: "#macro-roman-italic"   }
			{ include: "#escapes"              }
		]
	}
	
	
	
	# Comments
	comments:
		patterns: [{
			name: "comment.line.roff"
			begin: "[.']?\\s*\\\\\""
			end: "$"
			beginCaptures:
				0: {name: "punctuation.definition.begin.comment.roff"}
		}, {
			
			# Empty control lines
			name: "comment.empty.roff"
			match: "^[.'][ \t]*$"
		}]
	
	
	
	# Escape sequences
	escapes:
		patterns: [
			{ match: "\\x5C{2}",  name: "constant.character.escape.backslash.roff"},
			{ match: "\\\\\n",    name: "constant.character.escape.newline.roff"},
			{ match: "\\\\ ",     name: "constant.character.escape.space.roff"},
			{ match: "\\\\\"",    name: "constant.character.escape.quote.double.roff"}
		]
	
	
	
	# "Double-quoted string"
	string:
		patterns: [{
			name: "string.quoted.double.empty.roff",
			match: '(")(")'
		}, {
			name: "string.quoted.double.roff",
			begin: '"(?!")'
			end:   '(?<!")"(?!")|(?<!\\\\)$'
			beginCaptures: {0: {name: "punctuation.definition.string.begin.roff"}}
			endCaptures:   {0: {name: "punctuation.definition.string.end.roff"}}
			patterns: [
				{match: '""', name: "constant.character.escape.quote.double.roff"},
				{include: "#escapes"}
			]
		}]
	
	
	
	
	# Request parameters
	params:
		patterns: [
			{include: "#string"},
			{name: "string.unquoted.roff", begin: "(?=[A-Za-z_])", end: "(?=[^\\w])"}
		]
	
	
	# Titles, sections and subsections
	headings:
		patterns: [{
			
			# Titles (GNU manual macro)
			name: "markup.heading.title.gnu.man.macro.roff"
			begin: "^([.']TH) +"
			end: "$"
			beginCaptures:
				1: {name: "entity.name.function.roff"}
			patterns: [
				{ include: "#main"    }
				{ include: "#params"  }
			]
		}, {
			
			# Sections
			name: "markup.heading.section.man.macro.roff"
			begin: "^([.']SH) +"
			end: "$"
			beginCaptures:
				1: {name: "entity.name.function.roff"}
			patterns: [
				{ include: "#main"    }
				{ include: "#params"  }
			]
		}, {
			
			# Subsections
			name: "markup.heading.subsection.man.macro.roff"
			begin: "^([.']Ss) +"
			end: "$"
			beginCaptures:
				1: {name: "entity.name.function.roff"}
			patterns: [
				{ include: "#main"    }
				{ include: "#params"  }
			]
			
		}]
	
	
	
	# Italics (typically rendered by nroff as underlined text)
	italic:
		name: "markup.italic.roff"
		begin: "(\\\\)(f[I2])"
		end: "(?=\\\\f[A-Za-z0-9])((\\\\)(f[RP1]))?"
		beginCaptures:
			1: {name: "punctuation.definition.backslash.roff"}
			2: {name: "entity.name.roff"}
		endCaptures:
			1: {name: "meta.terminator.roff"}
			2: {name: "punctuation.definition.backslash.roff"}
			3: {name: "entity.name.roff"}
	
	
	# Bold text
	bold:
		name: "markup.bold.roff"
		begin: "(\\\\)(f[B3])"
		end: "(?=\\\\f[A-Za-z0-9])((\\\\)(f[RP1]))?"
		beginCaptures:
			1: {name: "punctuation.definition.backslash.roff"}
			2: {name: "entity.name.roff"}
		endCaptures:
			1: {name: "meta.terminator.roff"}
			2: {name: "punctuation.definition.backslash.roff"}
			3: {name: "entity.name.roff"}
	
	
	# Both bold and italic
	"bold-italic":
		name: "markup.bold.italic.roff"
		begin: "(\\\\)(f4)"
		end: "(?=\\\\f[A-Za-z0-9])((\\\\)(f[RP1]))?"
		beginCaptures:
			1: {name: "punctuation.definition.backslash.roff"}
			2: {name: "entity.name.roff"}
		endCaptures:
			1: {name: "meta.terminator.roff"}
			2: {name: "punctuation.definition.backslash.roff"}
			3: {name: "entity.name.roff"}
	
	
	
	# Underlined passage
	underline:
		name: "meta.request.ul.roff"
		begin: "^([.']ul)(?: +(\\d+))?\\s*(.*?)\\s*?(\\\\\".*?)?\n"
		end:   "([^\n ]+\n)"
		patterns: [{ include: "$self" }]
		beginCaptures:
			1: {name: "entity.function.name.roff"}
			2: {name: "variable.parameter.argument.roff"}
			3: {name: "invalid.illegal.roff"}
			4: {name: "comment.line.roff"}
		endCaptures:
			0: {name: "markup.underline.roff"}


	# Macro: .B
	"macro-bold":
		name: "markup.bold.roff"
		begin: "^[.']B(?:$| +)"
		end:   "([^\n ]+ ?\n)"
		patterns: [{ include: "$self" }]
	
	
	# Macro: .I
	"macro-italic":
		name: "markup.italic.roff"
		begin: "^[.']I(?:$| +)"
		end:   "([^\n ]+ ?\n)"
		patterns: [{ include: "$self" }]
	
	
	# Macro: .BI
	"macro-bold-italic":
		name: "markup.bold-italic.roff"
		begin: "^([.']BI)(?=[ \t]|$)"
		end:   "(?<!\\\\)(?=\n)"
		beginCaptures:
			1: {name: "entity.function.name.roff"}
		patterns: [{
			begin: '(?<=[.\']BI)[ \\t]+(".*?(?<!")"(?!")|[^"\\s]\\S*)[ \t]*(?=")'
			end: '(?<=")|(?<!\\\\)$'
			patterns: [{include: "#italic-strings"}]
			beginCaptures:
				1:
					name: "markup.bold.roff"
					patterns: [{include: "#bold-strings"}]
		}, {
			begin: '(?=("[^"]*(?<!\\\\)")|\\S+)'
			end: '$|(?:^|[ \t]+|(?<="))(("[^"]*")|\\S+)'
			patterns: [{include: "#bold-strings"}]
			endCaptures:
				1: {name: "markup.italic.roff"}
				2: {patterns: [{include: "#string"}]}
		}]
	
	
	# Macro: .BR
	"macro-bold-roman":
		name: "markup.bold-roman.roff"
		begin: "^([.']BR)(?=[ \t]|$)"
		end:   "(?<!\\\\)(?=\n)"
		beginCaptures:
			1: {name: "entity.function.name.roff"}
		patterns: [{
			begin: '(?<=[.\']BR)[ \\t]+(".*?(?<!")"(?!")|[^"\\s]\\S*)[ \t]*(?=")'
			end: '(?<=")|(?<!\\\\)$'
			patterns: [{include: "#params"}]
			beginCaptures:
				1:
					name: "markup.bold.roff"
					patterns: [{include: "#bold-strings"}]
		}, {
			begin: '(?=("[^"]*(?<!\\\\)")|\\S+)'
			end: '$|(?:^|[ \t]+|(?<="))(?:("[^"]*")|\\S+)'
			patterns: [{include: "#bold-strings"}]
			endCaptures:
				1: {patterns: [{include: "#string"}]}
		}]
	
	
	# Macro: .IB
	"macro-italic-bold":
		name: "markup.italic-bold.roff"
		begin: "^([.']IB)(?=[ \t]|$)"
		end:   "(?<!\\\\)(?=\n)"
		beginCaptures:
			1: {name: "entity.function.name.roff"}
		patterns: [{
			begin: '(?<=[.\']IB)[ \\t]+(".*?(?<!")"(?!")|[^"\\s]\\S*)[ \t]*(?=")'
			end: '(?<=")|(?<!\\\\)$'
			patterns: [{include: "#bold-strings"}]
			beginCaptures:
				1:
					name: "markup.italic.roff"
					patterns: [{include: "#italic-strings"}]
		}, {
			begin: '(?=("[^"]*(?<!\\\\)")|\\S+)'
			end: '$|(?:^|[ \t]+|(?<="))(("[^"]*")|\\S+)'
			patterns: [{include: "#italic-strings"}]
			endCaptures:
				1: {name: "markup.bold.roff"}
				2: {patterns: [{include: "#string"}]}
		}]
		

	# Macro: .IR
	"macro-italic-roman":
		name: "markup.italic-roman.roff"
		begin: "^([.']IR)(?=[ \t]|$)"
		end:   "(?<!\\\\)(?=\n)"
		beginCaptures:
			1: {name: "entity.function.name.roff"}
		patterns: [{
			begin: '(?<=[.\']IR)[ \\t]+(".*?(?<!")"(?!")|[^"\\s]\\S*)[ \t]*(?=")'
			end: '(?<=")|(?<!\\\\)$'
			patterns: [{include: "#params"}]
			beginCaptures:
				1:
					name: "markup.italic.roff"
					patterns: [{include: "#italic-strings"}]
		}, {
			begin: '(?=("[^"]*(?<!\\\\)")|\\S+)'
			end: '$|(?:^|[ \t]+|(?<="))(?:("[^"]*")|\\S+)'
			patterns: [{include: "#italic-strings"}]
			endCaptures:
				1: {patterns: [{include: "#string"}]}
		}]


	# Macro: .RB
	"macro-roman-bold":
		name: "markup.roman-bold.roff"
		begin: "^([.']RB)(?=[ \t]|$)"
		end:   "(?<!\\\\)(?=\n)"
		beginCaptures:
			1: {name: "entity.function.name.roff"}
		patterns: [{
			begin: '(?<=[.\']RB)[ \\t]+(".*?(?<!")"(?!")|[^"\\s]\\S*)[ \t]*(?=")'
			end: '(?<=")|(?<!\\\\)$'
			patterns: [{include: "#bold-strings"}]
			beginCaptures:
				1: patterns: [{include: "#string"}]
		}, {
			begin: '(?=("[^"]*(?<!\\\\)")|\\S+)'
			end: '$|(?:^|[ \t]+|(?<="))(("[^"]*")|\\S+)'
			patterns: [{include: "#string"}]
			endCaptures:
				1: {name: "markup.bold.roff"}
				2: {patterns: [{include: "#string"}]}
		}]
	
	
	# Macro: .RI
	"macro-roman-italic":
		name: "markup.roman-italic.roff"
		begin: "^([.']RI)(?=[ \t]|$)"
		end:   "(?<!\\\\)(?=\n)"
		beginCaptures:
			1: {name: "entity.function.name.roff"}
		patterns: [{
			begin: '(?<=[.\']RI)[ \\t]+(".*?(?<!")"(?!")|[^"\\s]\\S*)[ \t]*(?=")'
			end: '(?<=")|(?<!\\\\)$'
			patterns: [{include: "#italic-strings"}]
			beginCaptures:
				1: patterns: [{include: "#string"}]
		}, {
			begin: '(?=("[^"]*(?<!\\\\)")|\\S+)'
			end: '$|(?:^|[ \t]+|(?<="))(("[^"]*")|\\S+)'
			patterns: [{include: "#string"}]
			endCaptures:
				1: {name: "markup.italic.roff"}
				2: {patterns: [{include: "#string"}]}
		}]
	
	
	# Bold words ("Quoted"/Unquoted)
	"bold-strings":
		patterns: [
			{include: "#bold-string"}
			{include: "#bold-bareword"}
		]
	
	# Bold: "Quoted"
	"bold-string":
		patterns: [{
			name: "markup.bold.roff"
			begin: '(?=")'
			end:   '$|(?<=")'
			patterns: [{
				
				# Concealed newline
				begin: "(?<=\\S)\\\\(?=\n)"
				end: "(?<!\\\\)(?=\\s|$)"
				beginCaptures: 0: {name: "constant.character.escape.newline.roff"}
				patterns: [{include: "#bold-string"}]
				
			}, {include: "#string"}]
		}]
	
	# Bold: Unquoted
	"bold-bareword":
		patterns: [{
			name: "markup.bold.roff"
			begin: "\\G(?!\\\\\n)"
			end: "(?=\\s|$)"
			patterns: [{
				# Concealed newline
				begin: "(?<=\\S)\\\\(?=\n)"
				end: "(?<!\\\\)(?=\\s|$)"
				beginCaptures: 0: {name: "constant.character.escape.newline.roff"}
				patterns: [{include: "#bold-bareword"}]
			}]
		}]
	
	
	# Italic words ("Quoted"/Unquoted)
	"italic-strings":
		patterns: [
			{include: "#italic-string"}
			{include: "#italic-bareword"}
		]
	
	# Italic: "Quoted"
	"italic-string":
		patterns: [{
			name: "markup.italic.roff"
			begin: '(?=")'
			end:   '$|(?<=")'
			patterns: [{
				
				# Concealed newline
				begin: "(?<=\\S)\\\\(?=\n)"
				end: "(?<!\\\\)(?=\\s|$)"
				beginCaptures: 0: {name: "constant.character.escape.newline.roff"}
				patterns: [{include: "#italic-string"}]
				
			}, {include: "#string"}]
		}]
	
	
	# Italic: Unquoted
	"italic-bareword":
		patterns: [{
			name: "markup.italic.roff"
			begin: "\\G(?!\\\\\n)"
			end: "(?=\\s|$)"
			patterns: [{
				# Concealed newline
				begin: "(?<=\\S)\\\\(?=\n)"
				end: "(?<!\\\\)(?=\\s|$)"
				beginCaptures: 0: {name: "constant.character.escape.newline.roff"}
				patterns: [{include: "#italic-bareword"}]
			}]
		}]
