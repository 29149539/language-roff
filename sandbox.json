{
	"name": "Sandbox",
	"scopeName": "source.sandbox",
	"fileTypes": [],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"name": "meta.odd-even.roff",
			"begin": "^([.'])[ \t]*(BI)\\b",
			"end": "(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\\")",
			"beginCaptures": {
				"0": {
					"name": "meta.function.man.macro.roff"
				},
				"1": {
					"name": "punctuation.definition.function.macro.roff"
				},
				"2": {
					"name": "entity.name.function.roff"
				}
			},
			"patterns": [
				{
					"include": "#odd"
				},
				{
					"include": "#even"
				},
				{
					"include": "#odd-escape"
				},
				{
					"include": "#even-escape"
				}
			]
		}
	],
	"repository": {
		"odd": {
			"patterns": [
				{
					"name": "markup.bold",
					"begin": "[ \t]+(\")",
					"end": "(\")[ \t]*|(?=\\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.string.begin.roff"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.roff"
						}
					},
					"patterns": [
						{
							"match": "((?:[^\"\\\\]|\"\"|\\\\(?!\").)+)(?!$)",
							"captures": {
								"1": {
									"patterns": [
										{
											"include": "#string-escapes"
										}
									]
								}
							}
						},
						{
							"include": "#string-escapes"
						}
					]
				},
				{
					"name": "markup.bold",
					"begin": "[ \t]+(\\\\$\\n?)",
					"end": "(?<!^)[ \t]+|(?=\\\\\")|(?<!\\\\)(?=\\n|$)",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						}
					},
					"patterns": [
						{
							"include": "#escapes"
						},
						{
							"begin": "^[ \t]+",
							"end": "(?=\\S)|(?<!\\\\)(?:$|\\n)"
						}
					]
				},
				{
					"name": "markup.bold",
					"begin": "[ \t]+(?!\")((?:[^\\s\"\\\\]|\\\\(?!\").)+)",
					"end": "[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\\")",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						}
					},
					"patterns": [
						{
							"include": "#escapes"
						}
					]
				}
			]
		},
		"even": {
			"patterns": [
				{
					"name": "markup.italic",
					"begin": "\"",
					"end": "(\")([^\"\\s]+[ \t]*)?|(?=\\\\\")|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.roff"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.roff"
						},
						"2": {
							"name": "markup.bold"
						}
					},
					"patterns": [
						{
							"match": "((?:[^\"\\\\]|\"\"|\\\\(?!\").)+)(?!$)",
							"captures": {
								"1": {
									"patterns": [
										{
											"include": "#string-escapes"
										}
									]
								}
							}
						},
						{
							"include": "#string-escapes"
						}
					]
				},
				{
					"name": "markup.italic",
					"begin": "(?<=^|\\s|\")(?!\"|\\\\\")((?:[^\\s\"\\\\]|\\\\(?!\").)+)",
					"end": "(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\\")",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						}
					},
					"patterns": [
						{
							"include": "#escapes"
						}
					]
				}
			]
		},
		"odd-escape": {
			"name": "constant.character.escape.newline.roff",
			"begin": "[ \t]+\\\\$\\n?",
			"end": "^"
		},
		"even-escape": {
			"name": "constant.character.escape.newline.roff",
			"begin": "\\\\$\\n?",
			"end": "^[ \t]*"
		},
		"escapes": {
			"patterns": [
				{
					"match": "(\\\\n\\()(\\w{2})",
					"name": "constant.character.escape",
					"captures": {
						"1": {
							"name": "entity.name"
						},
						"2": {
							"name": "variable.parameter"
						}
					}
				},
				{
					"match": "\\\\.",
					"name": "constant.character.escape"
				},
				{
					"name": "constant.character.escape.newline",
					"begin": "\\\\$\\n?",
					"end": "^"
				}
			]
		},
		"string-escapes": {
			"patterns": [
				{
					"match": "\"\"",
					"name": "constant.character.escape.quote.double.roff"
				},
				{
					"include": "#escapes"
				}
			]
		},
		"comments": {
			"begin": "\\\\\"",
			"end": "$",
			"name": "comment.line"
		}
	}
}