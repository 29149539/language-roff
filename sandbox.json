{
	"name": "Sandbox",
	"scopeName": "source.sandbox",
	"fileTypes": [],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"name": "box",
			"begin": "^.BI",
			"end": "(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\\")",
			"patterns": [
				{
					"include": "#redQuoted"
				},
				{
					"include": "#red"
				},
				{
					"include": "#greenQuoted"
				},
				{
					"include": "#green"
				},
				{
					"include": "#escape-red-to-green"
				},
				{
					"include": "#escape-green-to-red"
				}
			]
		}
	],
	"repository": {
		"redQuoted": {
			"name": "markup.bold",
			"begin": "(?x)\n[ \t]+\n(\")",
			"end": "(?x)\n(\")[ \t]*\n|\n(?=\\\\\")\n|\n(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.string.begin.roff"
				}
			},
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.string.end.roff"
				}
			},
			"patterns": [
				{
					"match": "((?:[^\"\\\\]|\"\"|\\\\(?!\").)+)(?!$)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#string-escapes"
								}
							]
						}
					}
				},
				{
					"include": "#string-escapes"
				}
			]
		},
		"greenQuoted": {
			"name": "markup.italic",
			"begin": "\"",
			"end": "(?x)\n(\")\n(\n\t[^\"\\s]+\n\t[ \t]*\n)?\n|\n(?=\\\\\")\n|\n(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.roff"
				}
			},
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.string.end.roff"
				},
				"2": {
					"name": "markup.bold"
				}
			},
			"patterns": [
				{
					"match": "((?:[^\"\\\\]|\"\"|\\\\(?!\").)+)(?!$)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#string-escapes"
								}
							]
						}
					}
				},
				{
					"include": "#string-escapes"
				}
			]
		},
		"red": {
			"begin": "(?x)\n[ \t]+\n(?!\")\n(\n\t(?:\n\t\t[^\\s\"\\\\]\n\t\t|\n\t\t\\\\(?!\").\n\t)+\n)",
			"end": "[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\\")",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"include": "#escapes"
						}
					]
				}
			},
			"name": "markup.bold.faded",
			"patterns": [
				{
					"include": "#escapes"
				}
			]
		},
		"green": {
			"name": "markup.italic.faded",
			"begin": "(?x)\n(?<=^|\\s|\")\n(?!\"|\\\\\")\n(\n\t(?:\n\t\t[^\\s\"\\\\]\n\t\t|\n\t\t\\\\(?!\").\n\t)+\n)",
			"end": "(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n|$)|(?=\\\\\")",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"include": "#escapes"
						}
					]
				}
			},
			"patterns": [
				{
					"include": "#escapes"
				}
			]
		},
		"escape-green-to-red": {
			"begin": "\\\\$\\n?",
			"end": "^[ \t]*",
			"name": "test-3"
		},
		"escape-red-to-green": {
			"begin": "[ \t]+\\\\$\\n?",
			"end": "^",
			"name": "test-3"
		},
		"escapes": {
			"patterns": [
				{
					"match": "(\\\\n\\()(\\w{2})",
					"name": "constant.character.escape",
					"captures": {
						"1": {
							"name": "entity.name"
						},
						"2": {
							"name": "variable.parameter"
						}
					}
				},
				{
					"match": "\\\\.",
					"name": "constant.character.escape"
				},
				{
					"name": "constant.character.escape.newline",
					"begin": "\\\\$\\n?",
					"end": "^"
				}
			]
		},
		"string-escapes": {
			"patterns": [
				{
					"match": "\"\"",
					"name": "constant.character.escape.quote.double.roff"
				},
				{
					"include": "#escapes"
				}
			]
		},
		"comments": {
			"begin": "\\\\\"",
			"end": "$",
			"name": "comment.line"
		}
	}
}