{
	"name": "Sandbox",
	"scopeName": "source.sandbox",
	"fileTypes": [],
	"patterns": [
		{
			"begin": "\\\\\"",
			"end": "$",
			"name": "comment.line"
		},
		{
			"name": "box",
			"begin": "^.BI",
			"end": "(?<![^\\\\]\\\\|^\\\\)(?=\\n)|(?=\\\\\")",
			"patterns": [
				{
					"include": "#redQuoted"
				},
				{
					"include": "#red"
				},
				{
					"include": "#greenQuoted"
				},
				{
					"include": "#green"
				},
				{
					"include": "#escape-red-to-green"
				},
				{
					"include": "#escape-green-to-red"
				}
			]
		}
	],
	"repository": {
		"redQuoted": {
			"name": "markup.bold",
			"begin": "(?x)\n[ \t]+\n\"",
			"end": "(?x)\n\"[ \t]*\n|\n(?=\\\\\")\n|\n(?<![^\\\\]\\\\|^\\\\)(?=\\n)",
			"patterns": [
				{
					"match": "(?:[^\"\\\\]|\"\"|\\\\(?!\").)+(?!$)"
				},
				{
					"include": "#escapes"
				}
			]
		},
		"greenQuoted": {
			"name": "markup.italic",
			"begin": "\"",
			"end": "(?x)\n\"\n(\n\t[^\"\\s]+\n\t[ \t]*\n)?\n|\n(?=\\\\\")\n|\n(?<![^\\\\]\\\\|^\\\\)(?=\\n)",
			"endCaptures": {
				"1": {
					"name": "markup.bold"
				}
			},
			"patterns": [
				{
					"match": "(?:[^\"\\\\]|\"\"|\\\\(?!\").)+(?!$)"
				},
				{
					"include": "#escapes"
				}
			]
		},
		"red": {
			"begin": "(?x)\n[ \t]+\n(?!\")\n(?:\n\t[^\\s\"\\\\]\n\t|\n\t\\\\(?!\").\n)+",
			"end": "[ \t]+|(?<![^\\\\]\\\\|^\\\\)(?=\\n)|(?=\\\\\")",
			"name": "markup.bold.faded",
			"patterns": [
				{
					"include": "#escapes"
				}
			]
		},
		"green": {
			"name": "markup.italic.faded",
			"begin": "(?x)\n(?<=^|\\s|\")\n(?!\"|\\\\\")\n(?:\n\t[^\\s\"\\\\]\n\t|\n\t\\\\(?!\").\n)+",
			"end": "(?=[ \t])|(?<![^\\\\]\\\\|^\\\\)(?=\\n)|(?=\\\\\")",
			"beginCaptures": {
				"0": {
					"name": "begin"
				}
			},
			"patterns": [
				{
					"include": "#escapes"
				}
			]
		},
		"escape-green-to-red": {
			"begin": "\\\\$\\n",
			"end": "^[ \t]*",
			"name": "test-3"
		},
		"escape-red-to-green": {
			"begin": "[ \t]+\\\\$\\n",
			"end": "^",
			"name": "test-3"
		},
		"escapes": {
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape"
				},
				{
					"name": "constant.character.escape.newline",
					"begin": "\\\\$\\n",
					"end": "^"
				}
			]
		}
	}
}